#include "stdafx.h" 
#include "bst.h" 
#include <iostream> 
#include <fstream> 
#include <vector> 
#include <queue> 

using namespace std;

void print(int info)
{
	cout << info << endl;
}

int _tmain(int argc, _TCHAR* argv[])
{
	int mn, error, info;
	bst a;
	setlocale(LC_ALL, "Russian");
	bool fl1;

	do
	{
		cout << "Выберите пункт из меню:" << endl;
		cout << "1)Добавить элемент в дерево" << endl;
		cout << "2)Удаление элемента из дерева" << endl;
		cout << "3)Уничтожение дерева" << endl;
		cout << "4)Проверка на существование элемента" << endl;
		cout << "5)Вычисление глубины дерева" << endl;
		cout << "6)Прямой обход дерева" << endl;
		cout << "7)Симметричный обход дерева" << endl;
		cout << "8)Обратный обход дерева" << endl;
		cout << "9)Обход дерева по ширине" << endl;

		cin >> mn;

		if (mn < 0 || mn>9)
		{
			cout << "Ошибка! Необходимо ввести число от 1 до 9 или 0 для выхода." << endl << endl;
			system("pause");
			cin.clear();
			cin.ignore();
			system("cls");
		}

		switch (mn)

		{


		case 1:
		{
			system("cls");
			cout << "Введите значение:" << endl;
			cin >> info;
			a.PushWrapper(info);
			system("cls");
			break;
		}

		case 2:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				cout << "Введите значение:" << endl;
				cin >> info;
				if (a.IsExistElem(info))
				{
					system("cls");
					a.DelWrapper(info);
					cout << "Элемент удален" << endl;
					system("pause");
					system("cls");
					break;
				}
				else
				{
					system("cls");
					cout << "Элемента в дереве нет" << endl;
					system("pause");
					system("cls");
					break;
				}

			}

		}




		case 3:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				system("cls");
				a.DelTree();
				cout << "Дерево уничтожено" << endl;
				system("pause");
				system("cls");
				break;
			}

		}



		case 4:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				cout << "Введите значение:" << endl;
				cin >> info;
				if (a.IsExistElem(info))
				{
					system("cls");
					cout << "Элемент существует" << endl;
					system("pause");
					system("cls");
					break;
				}
				else
				{
					system("cls");
					cout << "Элемент не существует" << endl;
					system("pause");
					system("cls");
					break;
				}

			}

		}





		case 5:
		{
			system("cls");
			cout <<"Глубина дерева: "<< a.DepthWrapper()<<endl<< endl;
			system("pause");
			system("cls");
			break;
		}




		case 6:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				system("cls");
				a.StraightWrapper(print);
				system("pause");
				system("cls");
				break;
			}
		}






		case 7:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				system("cls");
				a.SymmetricWrapper(print);
				system("pause");
				system("cls");
				break;
			}
		}

		case 8:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				system("cls");
				a.BackWrapper(print);
				system("pause");
				system("cls");
				break;
			}
		}

		case 9:
		{
			system("cls");
			if (a.IsEmptyTree())
			{
				cout << "Элементов в дереве нет" << endl;
				system("pause");
				system("cls");
				break;
			}
			else
			{
				system("cls");
				a.Width(print);
				system("pause");
				system("cls");
				break;
			}
		}

		}

	} while (mn != 0);
	system("pause");
	return 0;
}
